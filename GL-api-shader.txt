
+++++++++++++++++++++++++++++++++++++++
 info
+++++++++++++++++++++++++++++++++++++++

====================================================================================================
 void glGetProgramiv(GLuint program, GLenum pname, const GLint* param);
----------------------------------------------------------------------------------------------------
获取当前program的实时信息

# program:
# pname:
- GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
- GL_ACTIVE_ATTRIBUTES（表示glsl程序中实际用到的attribute数目。与client无关，仅与vShader代码相关）
- GL_ACTIVE_UNIFORM_MAX_LENGTH
- GL_ACTIVE_UNIFORMS（表示glsl程序中实际用到的uniform数目。与client无关，仅与vShader,fShader代码相关）
- GL_ATTACHED_SHADERS
- GL_LINK_STATUS

# param: 返回接收指针




====================================================================================================
 void glGetIntegerv(GLenum pname, GLint* params);
----------------------------------------------------------------------------------------------------
获取当前GL系统的相关信息

pname: 表示要得到什么状态的值
- GL_MAX_VERTEX_UNIFORM_VECTORS: 一个uniform变量能存储的最大vec4数量，一个vec4包含4个comp（128+）
- GL_MAX_VERTEX_UNIFORM_COMPONENTS: 一个uniform变量能存储的最大comp数量（是上面的4倍）
- GL_MAX_FRAGMENT_UNIFORM_VECTORS（16+）
- GL_MAX_VERTEX_ATTRIBS（8+）
- GL_MAX_VARYING_VECTORS（8+）

- GL_MAX_TEXTURE_UNITS（8+）
- GL_MAX_TEXTURE_IMAGE_UNITS






+++++++++++++++++++++++++++++++++++++++
 shader
+++++++++++++++++++++++++++++++++++++++

====================================================================================================
 GLuint glCreateShader(GLenum type);
----------------------------------------------------------------------------------------------------
生成着色单元handle

type枚举:

- GL_VERTEX_SHADER
- GL_FRAGMENT_SHADER
- GL_GEOMETRY_SHADER


====================================================================================================
void glShaderSource(GLuint shader, GLsizei count, GLchars** string, const GLint lengths);
----------------------------------------------------------------------------------------------------
上传着色单元源码




====================================================================================================
void glCompileShader(GLuint shader);
----------------------------------------------------------------------------------------------------
编译着色单元




====================================================================================================
void glGetShaderiv(GLuint shader, GLenum pname, GLint* param);
----------------------------------------------------------------------------------------------------
获取着色单元状态码




====================================================================================================
void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
----------------------------------------------------------------------------------------------------
获取着色单元信息记录（一般为错误信息）




====================================================================================================
void glDeleteShader(GLuint shader);
----------------------------------------------------------------------------------------------------
释放着色单元





+++++++++++++++++++++++++++++++++++++++
 program 
+++++++++++++++++++++++++++++++++++++++

====================================================================================================
 Gluint glCreateProgram();
----------------------------------------------------------------------------------------------------
生成着色程序handle





====================================================================================================
 void glAttachShader(GLuint program, GLuint shader);
----------------------------------------------------------------------------------------------------
向着色程序中加入着色单元





====================================================================================================
void glLinkProgram(Gluint program);
----------------------------------------------------------------------------------------------------
链接着色程序（一般为错误信息）






====================================================================================================
void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
----------------------------------------------------------------------------------------------------





====================================================================================================
 void glUseProgram(Gluint program);
----------------------------------------------------------------------------------------------------
设定当前要使用的着色程序





====================================================================================================
 void glDeleteProgram(GLuint program);
----------------------------------------------------------------------------------------------------
释放着色程序














