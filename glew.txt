
====================================================================================================
 glfw
====================================================================================================
// 1. 初始化，获取返回值
int v = glfwInit();

// 2. 创建窗口，获取窗口对象指针
GLFWwindow* w = glfwCreateWindow(1136, 640, "Hello AA", nullptr, nullptr);
if (window == nullptr) {
  glfwTerminate();
  return -1;
}

// 3. 创建渲染上下文
void glfwMakeContextCurrent(GLFWwindow* window);

// 4. 事件侦听
glfwSetKeyCallback( GLFWwindow* window, GLFWkeyfun cbfun ); - 键盘侦听
glfwSetMouseButtonCallback(GLFWwindow* window, GLFWmousebuttonfun cbfun); - 滑鼠

// 5. 帧循环
while(int glfwWindowShouldClose(GLFWwindow* window)){

// 6. 触发事件回调
void glfwPollEvents(void);

render...

// 7. 交换渲染缓存
void glfwSwapBuffers(GLFWwindow* window);
}



====================================================================================================
 glew
====================================================================================================

/////////////////////////////
// glossary
/////////////////////////////

----------------------------------------------------------------------------------------------------
 VBO（顶点缓存）
----------------------------------------------------------------------------------------------------
vertex buffer object，相当于Stage3D中的VertexBuffer3D对象，本质上来讲，在GPU显存中创建一块Buffer用于存储顶点相关信息。（Model?）

- 优点: 可一次发送大量数据给显卡，发数据到显卡从cpu是相对较慢的，所以每次都要发尽可能多的数据。一旦数据进入显卡内存，读取顶点数据的速度是极快的。



----------------------------------------------------------------------------------------------------
 EBO（索引缓存）
----------------------------------------------------------------------------------------------------
element buffer object，相当于Stage3D中的IndexBuffer3D对象



----------------------------------------------------------------------------------------------------
 VAO（顶点数组）- OpenGL状态机的核心
----------------------------------------------------------------------------------------------------
vertex array object，存储使用哪些Buffer，以及如何使用VBO里面的数据，哪些是坐标，哪些是颜色等信息。（本质上是状态模式的实现!!）

- 绑定VAO的同时，会绑定其内部存储的相关Buffer（VBO，EBO..），而无需手动。
- 存储的行为: glBindBuffer、glVertexAttribPointer、glEnableVertexAttribArray。












