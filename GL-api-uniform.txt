
+++++++++++++++++++++++++++++++++++++++
 uniformN?
+++++++++++++++++++++++++++++++++++++++
每个uniform变量都要绑定一个program，要想所有program统一使用某个uniform，只有为每个program设置一次...

- 使用该方法前，必须先调用glUseProgram方法，否则无效!



====================================================================================================
 GLint glGetUniformLocation(GLuint program, const GLchar* name);
----------------------------------------------------------------------------------------------------

- program: GLProgram对象id
- name: GLSL中的常量名称


ps.
使用该方法将与特定program之间产生强耦合!!不推荐使用!!






====================================================================================================
 void glUniformN?(GLint location, ...); 
----------------------------------------------------------------------------------------------------
上传1-4个变量

- location: uniform变量位置

- f:float
- i:int
- ui:unsigned int
- 3f:float×3
- fv:float vector/array




====================================================================================================
 void glUniformN?v(GLint location, GLsizei count, GLfloat* value); 
----------------------------------------------------------------------------------------------------
上传数组式1-4个变量

- location: uniform变量位置
- count: 要更改的元素个数。如果目标uniform变量不是一个数组，应该为1。如果是数组，则应该>=1
- value: 一个具有count个数值的数组指针，用来更新指定的uniform变量





====================================================================================================
 void glUniformMatrixNfv(GLint location, GLsizei count, GLfloat* value); 
----------------------------------------------------------------------------------------------------

- location: uniform变量位置
- count: 要更改的矩阵个数
- transpose: 是否要转置矩阵
- value: 一个具有count个数值的数组指针，用来更新指定的uniform变量




====================================================================================================
 void glProgramUniform?????(GLuint program, GLint location, ?????); 
----------------------------------------------------------------------------------------------------
不需要glUseProgram来预先绑定，就可直接取得某个uniform变量的location值并关联数据


ps.
* 完全可以替代glUniform系列函数（是它们功能的一个超集）




====================================================================================================
 void glGetActiveUniform（GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
----------------------------------------------------------------------------------------------------

- ?????








+++++++++++++++++++++++++++++++++++++++
 Uniform Buffer
+++++++++++++++++++++++++++++++++++++++
uniform buffer object用来存储uniform变量的缓冲区对象，可以让uniform变量在不同的program中实现共享



????????????????????
























