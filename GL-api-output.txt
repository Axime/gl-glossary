
+++++++++++++++++++++++++++++++++++++++
 configuration
+++++++++++++++++++++++++++++++++++++++

====================================================================================================
 void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
----------------------------------------------------------------------------------------------------
- 相当于Context3D的configureBackBuffer(..)






====================================================================================================
 void glEnable / glDisable(GLenum cap);
----------------------------------------------------------------------------------------------------

- GL_BLEND
- GL_DEPTH_TEST
- GL_STENCIL_TEST
- GL_CULL_FACE




====================================================================================================
 void glBlendFunc(GLenum sfactor, GLenum dfactor);
----------------------------------------------------------------------------------------------------
设置混合方法

blend枚举:
- GL_ZERO
- GL_ONE

- GL_SRC_COLOR
- GL_ONE_MINUS_SRC_COLOR
- GL_DST_COLOR
- GL_ONE_MINUS_DST_COLOR

- GL_SRC_ALPHA
- GL_ONE_MINUS_SRC_APHA
- GL_DST_ALPHA
- GL_ONE_MINUS_SRC_ALPHA

- GL_CONSTANT_COLOR
- GL_ONE_MINUS_CONSTANT_COLOR
- GL_CONSTANT_ALPHA
- GL_ONE_MINUS_CONSTANT_ALPHA





====================================================================================================
 void glBlendEquation(GLenum mode);
----------------------------------------------------------------------------------------------------
设置混合模式的基础计算模式

mode枚举:
- GL_FUNC_ADD: ret = src + dst，为系统默认
- GL_FUNC_SUBTRACT: ret = stc - dst
- GL_FUNC_REVERSE_SUBTRACT: ret = dst - src





====================================================================================================
 void glDepthFunc(GLenum func);
----------------------------------------------------------------------------------------------------

func枚举:
- GL_LESS
- GL_LEQUAL
- GL_GREATER
- GL_GEQUAL
- GL_EQUAL
- GL_NOTEQUAL
- GL_ALWAYS
- GL_NEVER




====================================================================================================
 void glDepthMask(GLboolean flag);
----------------------------------------------------------------------------------------------------






====================================================================================================
 void glStencilFunc(GLenum func, GLint ref, GLuint mask);
----------------------------------------------------------------------------------------------------






====================================================================================================
 void glStencilMask(GLuint mask);
----------------------------------------------------------------------------------------------------






====================================================================================================
 void glCullFace(GLenum mode);
----------------------------------------------------------------------------------------------------
设置剔除模式

mode枚举:
- GL_BACK: 背面（默认值）
- GL_FRONT: 正面
- GL_FRONT_AND_BACK: 双面（仅保留Line与Point）





====================================================================================================
 void glFrontFace(GLenum mode);
----------------------------------------------------------------------------------------------------
设定何种绘制方向为正面

mode枚举:
- GL_CCW: 逆时针方向绘制（默认值）
- GL_CW: 顺时针反向绘制









+++++++++++++++++++++++++++++++++++++++
 draw
+++++++++++++++++++++++++++++++++++++++

====================================================================================================
 void glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
----------------------------------------------------------------------------------------------------






====================================================================================================
 void glClearDepth(GLclampd depth);
----------------------------------------------------------------------------------------------------






====================================================================================================
 void glClearStencil(GLint s);
----------------------------------------------------------------------------------------------------






====================================================================================================
 void glClear(GLbitfield mask);
----------------------------------------------------------------------------------------------------

- GL_COLOR_BUFFER_BIT
- GL_DEPTH_BUFFER_BIT
- GL_STENCIL_BUFFER_BIT





====================================================================================================
 void glDrawArrays(GLenum mode, GLint first, GLsizei count);
----------------------------------------------------------------------------------------------------
按buffer内部的传入顺序绘制。图形较少或很多相同的情况下，使用其可节省数据占用空间（不需要EBO）

# mode
	- GL_POINTS
	- GL_TRIANGLES


# first: 首索引
# count: 要绘制的顶点数目




====================================================================================================
 void glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices);
----------------------------------------------------------------------------------------------------
按索引值绘制。如果图形多，而且基本不相同，优先采用。

# mode:
# count: 要绘制的顶点数目
# type: 一般为GL_UNSIGNED_INT
# indices: 指定缓冲中的偏移（一般为0），或索引数据的位置指针（如果不使用EBO）









+++++++++++++++++++++++++++++++++++++++
 deprecated(固定管线)
+++++++++++++++++++++++++++++++++++++++

glColor(..)
glVertex(..)

glBegin(..)
glEnd(..)







